From b79957ebedf0a584d7174a54efb5943c9ff95934 Mon Sep 17 00:00:00 2001
From: Christopher Degawa <ccom@randomderp.com>
Date: Mon, 7 Sep 2020 22:44:17 +0000
Subject: [PATCH] Mingw-w64: Re-enable avx2

recent patches in mingw-w64 and gcc fixes using avx2 with pass-by-value
arguments, https://github.com/msys2/MINGW-packages/pull/10314

Confirmed by compiling with gcc.exe "(Rev6, Built by MSYS2 project) 11.2.0"
with `CFLAGS=-mavx2 ./configure`
and encoding a video

Compiled: INTEL, flags: MMX SSE SSE2 SSE3 SSSE3 SSE41 SSE42 AVX AVX2
Detected: INTEL, flags: MMX SSE SSE2 SSE3 SSSE3 SSE41 SSE42 AVX AVX2
Available: avx2(54) sse2(2) sse41(4)
In use: avx2(54) sse2(1)

Signed-off-by: Christopher Degawa <ccom@randomderp.com>
---
 configure.ac | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/configure.ac b/configure.ac
index 832b584d..0706e50a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -68,8 +68,8 @@ AX_CHECK_COMPILE_FLAG([-mbmi2],   [flag_bmi2="true"])
 # Do we need -mpopcnt and -mlzcnt, or -mabm to use POPCNT and LZCNT
 # instructions? Ask GCC and Clang, and they have different answers.
 AM_CONDITIONAL([HAVE_ALTIVEC], [test x"$flag_altivec" = x"true"])
-AM_CONDITIONAL([HAVE_AVX2_GCC], [test x"$flag_avx2" = x"true" -a x"$flag_bmi" = x"true" -a x"$flag_abm" = x"true" -a x"$flag_bmi2" = x"true" -a x"$flag_gcc_on_mingw" = x"false"])
-AM_CONDITIONAL([HAVE_AVX2_CLANG], [test x"$flag_avx2" = x"true" -a x"$flag_bmi" = x"true" -a x"$flag_popcnt" = x"true" -a x"$flag_lzcnt" = x"true" -a x"$flag_bmi2" = x"true" -a x"$flag_gcc_on_mingw" = x"false"])
+AM_CONDITIONAL([HAVE_AVX2_GCC], [test x"$flag_avx2" = x"true" -a x"$flag_bmi" = x"true" -a x"$flag_abm" = x"true" -a x"$flag_bmi2" = x"true"])
+AM_CONDITIONAL([HAVE_AVX2_CLANG], [test x"$flag_avx2" = x"true" -a x"$flag_bmi" = x"true" -a x"$flag_popcnt" = x"true" -a x"$flag_lzcnt" = x"true" -a x"$flag_bmi2" = x"true"])
 AM_CONDITIONAL([HAVE_SSE4_1], [test x"$flag_sse4_1" = x"true"])
 AM_CONDITIONAL([HAVE_SSE2], [test x"$flag_sse2" = x"true"])
 
-- 
2.34.1

